/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as UnauthenticatedImport } from './routes/_unauthenticated'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexImport } from './routes/index'
import { Route as UnauthenticatedLoginImport } from './routes/_unauthenticated/login'
import { Route as AuthenticatedDashboardImport } from './routes/_authenticated/dashboard'
import { Route as AuthenticatedVideosIndexImport } from './routes/_authenticated/videos/index'
import { Route as AuthenticatedDocumentsIndexImport } from './routes/_authenticated/documents/index'
import { Route as AuthenticatedAudiosIndexImport } from './routes/_authenticated/audios/index'
import { Route as AuthenticatedDocumentsDocumentIdImport } from './routes/_authenticated/documents/$documentId'
import { Route as AuthenticatedAudiosAudioIdImport } from './routes/_authenticated/audios/$audioId'

// Create/Update Routes

const UnauthenticatedRoute = UnauthenticatedImport.update({
  id: '/_unauthenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const UnauthenticatedLoginRoute = UnauthenticatedLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => UnauthenticatedRoute,
} as any)

const AuthenticatedDashboardRoute = AuthenticatedDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedVideosIndexRoute = AuthenticatedVideosIndexImport.update({
  id: '/videos/',
  path: '/videos/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedDocumentsIndexRoute =
  AuthenticatedDocumentsIndexImport.update({
    id: '/documents/',
    path: '/documents/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedAudiosIndexRoute = AuthenticatedAudiosIndexImport.update({
  id: '/audios/',
  path: '/audios/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedDocumentsDocumentIdRoute =
  AuthenticatedDocumentsDocumentIdImport.update({
    id: '/documents/$documentId',
    path: '/documents/$documentId',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedAudiosAudioIdRoute = AuthenticatedAudiosAudioIdImport.update(
  {
    id: '/audios/$audioId',
    path: '/audios/$audioId',
    getParentRoute: () => AuthenticatedRoute,
  } as any,
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_unauthenticated': {
      id: '/_unauthenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof UnauthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/dashboard': {
      id: '/_authenticated/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_unauthenticated/login': {
      id: '/_unauthenticated/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof UnauthenticatedLoginImport
      parentRoute: typeof UnauthenticatedImport
    }
    '/_authenticated/audios/$audioId': {
      id: '/_authenticated/audios/$audioId'
      path: '/audios/$audioId'
      fullPath: '/audios/$audioId'
      preLoaderRoute: typeof AuthenticatedAudiosAudioIdImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/documents/$documentId': {
      id: '/_authenticated/documents/$documentId'
      path: '/documents/$documentId'
      fullPath: '/documents/$documentId'
      preLoaderRoute: typeof AuthenticatedDocumentsDocumentIdImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/audios/': {
      id: '/_authenticated/audios/'
      path: '/audios'
      fullPath: '/audios'
      preLoaderRoute: typeof AuthenticatedAudiosIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/documents/': {
      id: '/_authenticated/documents/'
      path: '/documents'
      fullPath: '/documents'
      preLoaderRoute: typeof AuthenticatedDocumentsIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/videos/': {
      id: '/_authenticated/videos/'
      path: '/videos'
      fullPath: '/videos'
      preLoaderRoute: typeof AuthenticatedVideosIndexImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedDashboardRoute: typeof AuthenticatedDashboardRoute
  AuthenticatedAudiosAudioIdRoute: typeof AuthenticatedAudiosAudioIdRoute
  AuthenticatedDocumentsDocumentIdRoute: typeof AuthenticatedDocumentsDocumentIdRoute
  AuthenticatedAudiosIndexRoute: typeof AuthenticatedAudiosIndexRoute
  AuthenticatedDocumentsIndexRoute: typeof AuthenticatedDocumentsIndexRoute
  AuthenticatedVideosIndexRoute: typeof AuthenticatedVideosIndexRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedDashboardRoute: AuthenticatedDashboardRoute,
  AuthenticatedAudiosAudioIdRoute: AuthenticatedAudiosAudioIdRoute,
  AuthenticatedDocumentsDocumentIdRoute: AuthenticatedDocumentsDocumentIdRoute,
  AuthenticatedAudiosIndexRoute: AuthenticatedAudiosIndexRoute,
  AuthenticatedDocumentsIndexRoute: AuthenticatedDocumentsIndexRoute,
  AuthenticatedVideosIndexRoute: AuthenticatedVideosIndexRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

interface UnauthenticatedRouteChildren {
  UnauthenticatedLoginRoute: typeof UnauthenticatedLoginRoute
}

const UnauthenticatedRouteChildren: UnauthenticatedRouteChildren = {
  UnauthenticatedLoginRoute: UnauthenticatedLoginRoute,
}

const UnauthenticatedRouteWithChildren = UnauthenticatedRoute._addFileChildren(
  UnauthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof UnauthenticatedRouteWithChildren
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/login': typeof UnauthenticatedLoginRoute
  '/audios/$audioId': typeof AuthenticatedAudiosAudioIdRoute
  '/documents/$documentId': typeof AuthenticatedDocumentsDocumentIdRoute
  '/audios': typeof AuthenticatedAudiosIndexRoute
  '/documents': typeof AuthenticatedDocumentsIndexRoute
  '/videos': typeof AuthenticatedVideosIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof UnauthenticatedRouteWithChildren
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/login': typeof UnauthenticatedLoginRoute
  '/audios/$audioId': typeof AuthenticatedAudiosAudioIdRoute
  '/documents/$documentId': typeof AuthenticatedDocumentsDocumentIdRoute
  '/audios': typeof AuthenticatedAudiosIndexRoute
  '/documents': typeof AuthenticatedDocumentsIndexRoute
  '/videos': typeof AuthenticatedVideosIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/_unauthenticated': typeof UnauthenticatedRouteWithChildren
  '/_authenticated/dashboard': typeof AuthenticatedDashboardRoute
  '/_unauthenticated/login': typeof UnauthenticatedLoginRoute
  '/_authenticated/audios/$audioId': typeof AuthenticatedAudiosAudioIdRoute
  '/_authenticated/documents/$documentId': typeof AuthenticatedDocumentsDocumentIdRoute
  '/_authenticated/audios/': typeof AuthenticatedAudiosIndexRoute
  '/_authenticated/documents/': typeof AuthenticatedDocumentsIndexRoute
  '/_authenticated/videos/': typeof AuthenticatedVideosIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/dashboard'
    | '/login'
    | '/audios/$audioId'
    | '/documents/$documentId'
    | '/audios'
    | '/documents'
    | '/videos'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/dashboard'
    | '/login'
    | '/audios/$audioId'
    | '/documents/$documentId'
    | '/audios'
    | '/documents'
    | '/videos'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/_unauthenticated'
    | '/_authenticated/dashboard'
    | '/_unauthenticated/login'
    | '/_authenticated/audios/$audioId'
    | '/_authenticated/documents/$documentId'
    | '/_authenticated/audios/'
    | '/_authenticated/documents/'
    | '/_authenticated/videos/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  UnauthenticatedRoute: typeof UnauthenticatedRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  UnauthenticatedRoute: UnauthenticatedRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated",
        "/_unauthenticated"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/dashboard",
        "/_authenticated/audios/$audioId",
        "/_authenticated/documents/$documentId",
        "/_authenticated/audios/",
        "/_authenticated/documents/",
        "/_authenticated/videos/"
      ]
    },
    "/_unauthenticated": {
      "filePath": "_unauthenticated.tsx",
      "children": [
        "/_unauthenticated/login"
      ]
    },
    "/_authenticated/dashboard": {
      "filePath": "_authenticated/dashboard.tsx",
      "parent": "/_authenticated"
    },
    "/_unauthenticated/login": {
      "filePath": "_unauthenticated/login.tsx",
      "parent": "/_unauthenticated"
    },
    "/_authenticated/audios/$audioId": {
      "filePath": "_authenticated/audios/$audioId.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/documents/$documentId": {
      "filePath": "_authenticated/documents/$documentId.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/audios/": {
      "filePath": "_authenticated/audios/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/documents/": {
      "filePath": "_authenticated/documents/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/videos/": {
      "filePath": "_authenticated/videos/index.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
